Search.setIndex({"docnames": ["Analysis", "Circuits", "NoveltySearch", "Replication", "Setup", "index"], "filenames": ["Analysis.rst", "Circuits.rst", "NoveltySearch.rst", "Replication.rst", "Setup.rst", "index.rst"], "titles": ["Analysis", "Circuits", "Novelty Search", "Replication", "Set Up", "RandomBooleanCircuits"], "terms": {"author": [0, 2], "penn": [0, 2], "faulkner": [0, 2], "rainford": [0, 2, 5], "licens": [0, 2], "gpl": [0, 2], "v3": [0, 2], "copyright": [0, 2], "2022": [0, 2], "2023": [0, 2], "class": [0, 1, 2, 5], "randombooleancircuit": [0, 1, 2, 3, 4], "sourc": [0, 1, 2, 3], "pycharcanalysi": [0, 3], "truthtableanalys": [0, 5], "filenam": [0, 2], "gate_count": 0, "0": [0, 1, 2, 4], "read": [0, 1], "data": [0, 2], "from": [0, 1, 2, 3, 5], "csv": [0, 2, 3], "file": [0, 2, 3], "provid": [0, 3, 4, 5], "function": [0, 1, 2, 3, 5], "paramet": [0, 1, 2], "string": [0, 1, 2], "full": [0, 1], "path": [0, 2], "boolean": [0, 1, 2, 5], "circuit": [0, 2, 5], "script": [0, 2], "add_comp_count": 0, "add": [0, 2], "comp_count": 0, "column": [0, 2], "datafram": [0, 2, 3], "contain": [0, 3], "count": [0, 1, 2], "number": [0, 1, 2, 3], "activ": [0, 1, 2], "gate": [0, 1, 2, 3], "add_comp_fract": 0, "comp_frac": 0, "proport": 0, "AND": [0, 1, 2], "set": [0, 1, 2, 3, 5], "add_fc_dist": 0, "fc_dist": 0, "inact": [0, 1], "add_fc_tt_dist": 0, "fc_tt_dist": 0, "ham": 0, "distanc": 0, "between": 0, "truth": [0, 1, 2, 3], "tabl": [0, 1, 2, 3], "av_dist_btw_fp": 0, "averag": 0, "final": [0, 2], "popul": [0, 2], "return": [0, 1, 2], "groupbi": 0, "mean": 0, "type": [0, 1, 2], "av_dist_fc_to_fp": 0, "get": 0, "each": [0, 1, 3], "av_tt_dist_btw_fp": 0, "av_tt_dist_fc_to_fp": 0, "calc_dist_2": 0, "index_a": 0, "index_b": 0, "df": 0, "none": [0, 1, 2], "calcul": 0, "two": [0, 1, 2], "given": [0, 1, 2], "index": [0, 2, 5], "int": [0, 1, 2], "first": [0, 1, 2], "second": [0, 1], "select": 0, "subset": 0, "The": [0, 1, 2, 3, 4], "calc_dist_circuit": 0, "For": [0, 3], "all": [0, 1, 3, 5], "find": [0, 4, 5], "float": [0, 2], "calc_dist_group": 0, "input": [0, 1, 2], "output": [0, 1, 2, 3], "fals": [0, 2], "group": 0, "us": [0, 1, 2, 3, 4, 5], "identif": 0, "list": [0, 1, 2], "onli": 0, "true": 0, "archiv": [0, 3], "calc_max_dist_circuit": 0, "max": 0, "calc_max_tt_dist_circuit": 0, "calc_tt_dist_2": 0, "calc_tt_dist_circuit": 0, "circuit_graph_tt_lin": 0, "line": 0, "plot": [0, 3], "label": [0, 1, 2], "against": [0, 3], "seaborn": [0, 4], "pyplot": 0, "circuit_graph_tt_max_lin": 0, "comp_distance_graph": 0, "boxplot": 0, "compon": [0, 3], "box": [0, 3], "comp_size_by_tt": 0, "violin": 0, "fc_in_fp": 0, "i": [0, 1, 2, 3], "identifi": 0, "correct": [0, 1, 2], "valu": [0, 1, 2], "fc_tt_in_fp": 0, "check": 0, "find_fc": 0, "otherwis": [0, 4], "find_fc_tt": 0, "search": [0, 5], "gates_to_label": 0, "convert": [0, 2], "base": [0, 1, 2, 3], "10": 0, "new": [0, 2], "them": [0, 1], "get_archive_s": 0, "histogram": [0, 3], "size": [0, 3], "differ": [0, 2, 3], "initi": [0, 3], "get_fc_tt_index": 0, "input_count": [0, 2], "wire": [0, 2, 3], "get_group_label": 0, "assign": 0, "member": 0, "seri": 0, "static": 0, "get_label": 0, "max_comp_in_fp": 0, "max_dist_btw_fp": 0, "max_tt_dist_btw_fp": 0, "median_comp_in_fp": 0, "median": 0, "min_comp_in_fp": 0, "min": 0, "missing_fc_add": 0, "alreadi": [0, 2], "present": 0, "mode_comp_in_fp": 0, "mode": 0, "truth_cc_boxplot": 0, "uniqu": [0, 3], "truth_to_list": 0, "tt_by_circuit": 0, "scatter": [0, 3], "found": [0, 3, 4], "tt_distance_graph": 0, "unique_tt": 0, "variants_by_fc": 0, "circuit_descript": [0, 1, 2], "show": 0, "matplotlib": 0, "ax": 0, "version": [0, 1, 2, 4], "": 0, "run": [0, 1, 2, 3], "get_behaviour_t": [0, 5], "df_name": 0, "print": 0, "fulli": 0, "format": [0, 1], "latex": 0, "name": [0, 2, 3], "ar": [1, 2, 3, 5], "implement": [1, 2, 5], "cgp": 1, "represent": 1, "responc": 1, "an": [1, 3], "abil": 1, "knock": 1, "out": 1, "modifi": 1, "n": 1, "circuit_str": 1, "miller": 1, "julian": 1, "f": 1, "other": 1, "1999": 1, "empir": 1, "studi": 1, "effici": 1, "learn": [1, 4], "cartesian": 1, "genet": 1, "program": 1, "approach": 1, "In": [1, 2, 3], "proceed": 1, "evolutionari": 1, "comput": 1, "confer": 1, "2": [1, 2, 4], "1135": 1, "42": 1, "researchg": 1, "net": 1, "thi": [1, 2, 3, 5], "we": [1, 2, 3, 4], "follow": [1, 2, 3], "properti": 1, "buffer": [1, 2], "1": [1, 2, 4], "nand": [1, 2], "3": [1, 2, 4], "OR": [1, 2], "4": [1, 2], "nor": [1, 2], "5": [1, 2, 4], "xor": [1, 2], "6": [1, 2, 3], "nxor": [1, 2], "so": 1, "increment": 1, "integ": 1, "origin": 1, "where": 1, "next": 1, "taken": 1, "abov": [1, 3], "exampl": 1, "singl": [1, 2], "tupl": 1, "oper": 1, "repres": 1, "must": [1, 2], "same": [1, 2, 3], "length": 1, "Will": 1, "default": 1, "can": [1, 3, 4], "test": 1, "rang": 1, "possibl": 1, "inputa": 1, "inputb": 1, "gatetyp": 1, "gen_binary_str": 1, "gener": [1, 2], "binari": 1, "take": [1, 2], "produc": [1, 3], "equal": 1, "indic": [1, 2], "result": [1, 2], "run_singl": [1, 2], "variabl": 1, "set_paramet": 1, "chang": 1, "updat": 1, "replac": 1, "A": [1, 2], "boolean_circuit": 2, "rbcsystem": [2, 5], "input_unit": 2, "output_unit": 2, "hidden_unit": 2, "wash_out": 2, "discret": 2, "bool": 2, "concatenate_input": 2, "gate_0": 2, "gate_1": 2, "gate_2": 2, "gate_3": 2, "circuitset": 2, "option": 2, "system": [2, 3], "random": 2, "written": 2, "being": 2, "automat": [2, 4], "descriptor": 2, "its": 2, "input_v": 2, "descript": 2, "preprocess": 2, "ndarrai": 2, "ani": 2, "dtype": 2, "No": 2, "without": 2, "modif": [2, 5], "numpi": [2, 4], "which": [2, 3], "might": 2, "normal": 2, "process": 2, "current": 2, "run_on": 2, "arrai": 2, "perform": 2, "train": 2, "train_input": 2, "train_output": 2, "unus": 2, "instanc": [2, 3], "add_search_result": [2, 5], "metric": 2, "row": 2, "well": [2, 3], "whether": 2, "text": 2, "describ": 2, "microbialga": 2, "panda": [2, 4], "establish": 2, "gate_activ": 2, "truth_tabl": 2, "final_popul": 2, "ad": 2, "circuit_search": [2, 5], "up": [2, 5], "befor": [2, 3, 5], "object": 2, "exist": 2, "call": 2, "make_subclass": [2, 5], "dynam": 2, "subclass": 2, "defin": 2, "multipl": [2, 3], "gate_descriptor": 2, "output_valu": 2, "gaindividu": 2, "rbcindividu": 2, "save_result": [2, 5], "save": 2, "paper": 3, "ran": 3, "over": 3, "logic": [3, 5], "abl": 3, "remov": 3, "behaviour": [3, 5], "wa": [3, 5], "done": 3, "12": [3, 4], "fix": 3, "collect": 3, "http": [3, 4], "github": [3, 4], "com": [3, 4], "faulknerrainford": [3, 4], "directori": 3, "python": [3, 4], "bc_6_gate": 3, "py": 3, "under": 3, "20": 3, "minut": 3, "intel": 3, "core": 3, "i5": 3, "laptop": 3, "pycharc_multirun_6_gate_rbc_result": 3, "similarli": 3, "searcher": 3, "bc_12_gate": 3, "15": 3, "hour": 3, "pycharc_multirun_12_gate_rbc_result": 3, "raw": 3, "respect": 3, "repeat": 3, "both": 3, "6_var_group_df": 3, "12_var_group_df": 3, "case": 3, "larger": 3, "store": 3, "compress": 3, "zip": 3, "need": [3, 4], "extract": 3, "thei": 3, "modul": [3, 5], "main": 3, "n_archive_hist": 3, "png": 3, "n_tt_per_circuit": 3, "n_variants_per_tt": 3, "across": 3, "detail": 4, "packag": [4, 5], "how": 4, "download": 4, "If": 4, "depend": 4, "you": 4, "8": 4, "24": 4, "sklearn": 4, "post1": 4, "scikit": 4, "also": 4, "pycharc": 4, "port": 4, "charc": 4, "framework": 4, "dgdguk": 4, "code": [4, 5], "repositori": 4, "through": 4, "pypi": 4, "pip": 4, "built": 5, "investig": 5, "novelti": 5, "novel": 5, "small": 5, "view": 5, "similar": 5, "method": 5, "explor": 5, "plasmid": 5, "synthet": 5, "biologi": 5, "It": 5, "experi": 5, "analysi": 5, "potenti": 5, "et": 5, "al": 5, "instruct": 5, "instal": 5, "reimplement": 5, "document": 5, "requir": 5, "replic": 5, "circuitexplor": 5, "page": 5}, "objects": {"RandomBooleanCircuits.source.Circuit": [[1, 0, 1, "", "Circuit"]], "RandomBooleanCircuits.source.Circuit.Circuit": [[1, 1, 1, "", "run"]], "RandomBooleanCircuits.source.CircuitExplorer": [[1, 0, 1, "", "CircuitExplorer"]], "RandomBooleanCircuits.source.CircuitExplorer.CircuitExplorer": [[1, 1, 1, "", "gen_binary_strings"], [1, 1, 1, "", "run"], [1, 1, 1, "", "run_single"], [1, 1, 1, "", "set_parameters"]], "RandomBooleanCircuits.source": [[2, 2, 0, "-", "boolean_circuits"], [0, 2, 0, "-", "pycharcAnalysis"]], "RandomBooleanCircuits.source.boolean_circuits": [[2, 0, 1, "", "RBCSystem"], [2, 3, 1, "", "add_search_results"], [2, 3, 1, "", "circuit_search"], [2, 3, 1, "", "make_subclass"], [2, 3, 1, "", "save_results"]], "RandomBooleanCircuits.source.boolean_circuits.RBCSystem": [[2, 1, 1, "", "preprocess"], [2, 1, 1, "", "run"], [2, 1, 1, "", "run_one"], [2, 1, 1, "", "train"]], "RandomBooleanCircuits.source.pycharcAnalysis": [[0, 0, 1, "", "TruthTableAnalyser"], [0, 3, 1, "", "get_behaviour_table"]], "RandomBooleanCircuits.source.pycharcAnalysis.TruthTableAnalyser": [[0, 1, 1, "", "add_comp_count"], [0, 1, 1, "", "add_comp_fraction"], [0, 1, 1, "", "add_fc_dist"], [0, 1, 1, "", "add_fc_tt_dist"], [0, 1, 1, "", "av_dist_btw_fp"], [0, 1, 1, "", "av_dist_fc_to_fp"], [0, 1, 1, "", "av_tt_dist_btw_fp"], [0, 1, 1, "", "av_tt_dist_fc_to_fp"], [0, 1, 1, "", "calc_dist_2"], [0, 1, 1, "", "calc_dist_circuit"], [0, 1, 1, "", "calc_dist_group"], [0, 1, 1, "", "calc_max_dist_circuit"], [0, 1, 1, "", "calc_max_tt_dist_circuit"], [0, 1, 1, "", "calc_tt_dist_2"], [0, 1, 1, "", "calc_tt_dist_circuit"], [0, 1, 1, "", "circuit_graph_tt_line"], [0, 1, 1, "", "circuit_graph_tt_max_line"], [0, 1, 1, "", "comp_distance_graph"], [0, 1, 1, "", "comp_size_by_tt"], [0, 1, 1, "", "fc_in_fp"], [0, 1, 1, "", "fc_tt_in_fp"], [0, 1, 1, "", "find_fc"], [0, 1, 1, "", "find_fc_tt"], [0, 1, 1, "", "gates_to_label"], [0, 1, 1, "", "get_archive_size"], [0, 1, 1, "", "get_fc_tt_index"], [0, 1, 1, "", "get_group_labels"], [0, 1, 1, "", "get_label"], [0, 1, 1, "", "max_comp_in_fp"], [0, 1, 1, "", "max_dist_btw_fp"], [0, 1, 1, "", "max_tt_dist_btw_fp"], [0, 1, 1, "", "median_comp_in_fp"], [0, 1, 1, "", "min_comp_in_fp"], [0, 1, 1, "", "missing_fc_add"], [0, 1, 1, "", "mode_comp_in_fp"], [0, 1, 1, "", "truth_cc_boxplot"], [0, 1, 1, "", "truth_to_list"], [0, 1, 1, "", "tt_by_circuit"], [0, 1, 1, "", "tt_distance_graph"], [0, 1, 1, "", "unique_tt"], [0, 1, 1, "", "variants_by_fc"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:module", "3": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "module", "Python module"], "3": ["py", "function", "Python function"]}, "titleterms": {"analysi": [0, 3], "circuit": [1, 3], "circuitexplor": 1, "novelti": [2, 3], "search": [2, 3], "replic": 3, "explor": 3, "potenti": 3, "boolean": 3, "n": 3, "script": 3, "data": 3, "graph": 3, "set": 4, "up": 4, "requir": 4, "instal": 4, "randombooleancircuit": 5, "content": 5, "indic": 5, "tabl": 5}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Analysis": [[0, "module-RandomBooleanCircuits.source.pycharcAnalysis"], [3, "analysis"]], "Circuits": [[1, "circuits"]], "Circuit": [[1, "circuit"]], "CircuitExplorer": [[1, "circuitexplorer"]], "Novelty Search": [[2, "module-RandomBooleanCircuits.source.boolean_circuits"]], "Replication": [[3, "replication"]], "Exploring the potential of a Boolean Circuit with Novelty Search": [[3, "exploring-the-potential-of-a-boolean-circuit-with-novelty-search"]], "NS scripts": [[3, "ns-scripts"]], "Data": [[3, "data"]], "Graphs": [[3, "graphs"]], "Set Up": [[4, "set-up"]], "Requirements": [[4, "requirements"]], "Installation": [[4, "installation"]], "RandomBooleanCircuits": [[5, "randombooleancircuits"]], "Contents:": [[5, null]], "Indices and tables": [[5, "indices-and-tables"]]}, "indexentries": {"randombooleancircuits.source.pycharcanalysis": [[0, "module-RandomBooleanCircuits.source.pycharcAnalysis"]], "truthtableanalyser (class in randombooleancircuits.source.pycharcanalysis)": [[0, "RandomBooleanCircuits.source.pycharcAnalysis.TruthTableAnalyser"]], "add_comp_count() (randombooleancircuits.source.pycharcanalysis.truthtableanalyser method)": [[0, "RandomBooleanCircuits.source.pycharcAnalysis.TruthTableAnalyser.add_comp_count"]], "add_comp_fraction() (randombooleancircuits.source.pycharcanalysis.truthtableanalyser method)": [[0, "RandomBooleanCircuits.source.pycharcAnalysis.TruthTableAnalyser.add_comp_fraction"]], "add_fc_dist() (randombooleancircuits.source.pycharcanalysis.truthtableanalyser method)": [[0, "RandomBooleanCircuits.source.pycharcAnalysis.TruthTableAnalyser.add_fc_dist"]], "add_fc_tt_dist() (randombooleancircuits.source.pycharcanalysis.truthtableanalyser method)": [[0, "RandomBooleanCircuits.source.pycharcAnalysis.TruthTableAnalyser.add_fc_tt_dist"]], "av_dist_btw_fp() (randombooleancircuits.source.pycharcanalysis.truthtableanalyser method)": [[0, "RandomBooleanCircuits.source.pycharcAnalysis.TruthTableAnalyser.av_dist_btw_fp"]], "av_dist_fc_to_fp() (randombooleancircuits.source.pycharcanalysis.truthtableanalyser method)": [[0, "RandomBooleanCircuits.source.pycharcAnalysis.TruthTableAnalyser.av_dist_fc_to_fp"]], "av_tt_dist_btw_fp() (randombooleancircuits.source.pycharcanalysis.truthtableanalyser method)": [[0, "RandomBooleanCircuits.source.pycharcAnalysis.TruthTableAnalyser.av_tt_dist_btw_fp"]], "av_tt_dist_fc_to_fp() (randombooleancircuits.source.pycharcanalysis.truthtableanalyser method)": [[0, "RandomBooleanCircuits.source.pycharcAnalysis.TruthTableAnalyser.av_tt_dist_fc_to_fp"]], "calc_dist_2() (randombooleancircuits.source.pycharcanalysis.truthtableanalyser method)": [[0, "RandomBooleanCircuits.source.pycharcAnalysis.TruthTableAnalyser.calc_dist_2"]], "calc_dist_circuit() (randombooleancircuits.source.pycharcanalysis.truthtableanalyser method)": [[0, "RandomBooleanCircuits.source.pycharcAnalysis.TruthTableAnalyser.calc_dist_circuit"]], "calc_dist_group() (randombooleancircuits.source.pycharcanalysis.truthtableanalyser method)": [[0, "RandomBooleanCircuits.source.pycharcAnalysis.TruthTableAnalyser.calc_dist_group"]], "calc_max_dist_circuit() (randombooleancircuits.source.pycharcanalysis.truthtableanalyser method)": [[0, "RandomBooleanCircuits.source.pycharcAnalysis.TruthTableAnalyser.calc_max_dist_circuit"]], "calc_max_tt_dist_circuit() (randombooleancircuits.source.pycharcanalysis.truthtableanalyser method)": [[0, "RandomBooleanCircuits.source.pycharcAnalysis.TruthTableAnalyser.calc_max_tt_dist_circuit"]], "calc_tt_dist_2() (randombooleancircuits.source.pycharcanalysis.truthtableanalyser method)": [[0, "RandomBooleanCircuits.source.pycharcAnalysis.TruthTableAnalyser.calc_tt_dist_2"]], "calc_tt_dist_circuit() (randombooleancircuits.source.pycharcanalysis.truthtableanalyser method)": [[0, "RandomBooleanCircuits.source.pycharcAnalysis.TruthTableAnalyser.calc_tt_dist_circuit"]], "circuit_graph_tt_line() (randombooleancircuits.source.pycharcanalysis.truthtableanalyser method)": [[0, "RandomBooleanCircuits.source.pycharcAnalysis.TruthTableAnalyser.circuit_graph_tt_line"]], "circuit_graph_tt_max_line() (randombooleancircuits.source.pycharcanalysis.truthtableanalyser method)": [[0, "RandomBooleanCircuits.source.pycharcAnalysis.TruthTableAnalyser.circuit_graph_tt_max_line"]], "comp_distance_graph() (randombooleancircuits.source.pycharcanalysis.truthtableanalyser method)": [[0, "RandomBooleanCircuits.source.pycharcAnalysis.TruthTableAnalyser.comp_distance_graph"]], "comp_size_by_tt() (randombooleancircuits.source.pycharcanalysis.truthtableanalyser method)": [[0, "RandomBooleanCircuits.source.pycharcAnalysis.TruthTableAnalyser.comp_size_by_tt"]], "fc_in_fp() (randombooleancircuits.source.pycharcanalysis.truthtableanalyser method)": [[0, "RandomBooleanCircuits.source.pycharcAnalysis.TruthTableAnalyser.fc_in_fp"]], "fc_tt_in_fp() (randombooleancircuits.source.pycharcanalysis.truthtableanalyser method)": [[0, "RandomBooleanCircuits.source.pycharcAnalysis.TruthTableAnalyser.fc_tt_in_fp"]], "find_fc() (randombooleancircuits.source.pycharcanalysis.truthtableanalyser method)": [[0, "RandomBooleanCircuits.source.pycharcAnalysis.TruthTableAnalyser.find_fc"]], "find_fc_tt() (randombooleancircuits.source.pycharcanalysis.truthtableanalyser method)": [[0, "RandomBooleanCircuits.source.pycharcAnalysis.TruthTableAnalyser.find_fc_tt"]], "gates_to_label() (randombooleancircuits.source.pycharcanalysis.truthtableanalyser method)": [[0, "RandomBooleanCircuits.source.pycharcAnalysis.TruthTableAnalyser.gates_to_label"]], "get_archive_size() (randombooleancircuits.source.pycharcanalysis.truthtableanalyser method)": [[0, "RandomBooleanCircuits.source.pycharcAnalysis.TruthTableAnalyser.get_archive_size"]], "get_behaviour_table() (in module randombooleancircuits.source.pycharcanalysis)": [[0, "RandomBooleanCircuits.source.pycharcAnalysis.get_behaviour_table"]], "get_fc_tt_index() (randombooleancircuits.source.pycharcanalysis.truthtableanalyser method)": [[0, "RandomBooleanCircuits.source.pycharcAnalysis.TruthTableAnalyser.get_fc_tt_index"]], "get_group_labels() (randombooleancircuits.source.pycharcanalysis.truthtableanalyser method)": [[0, "RandomBooleanCircuits.source.pycharcAnalysis.TruthTableAnalyser.get_group_labels"]], "get_label() (randombooleancircuits.source.pycharcanalysis.truthtableanalyser static method)": [[0, "RandomBooleanCircuits.source.pycharcAnalysis.TruthTableAnalyser.get_label"]], "max_comp_in_fp() (randombooleancircuits.source.pycharcanalysis.truthtableanalyser method)": [[0, "RandomBooleanCircuits.source.pycharcAnalysis.TruthTableAnalyser.max_comp_in_fp"]], "max_dist_btw_fp() (randombooleancircuits.source.pycharcanalysis.truthtableanalyser method)": [[0, "RandomBooleanCircuits.source.pycharcAnalysis.TruthTableAnalyser.max_dist_btw_fp"]], "max_tt_dist_btw_fp() (randombooleancircuits.source.pycharcanalysis.truthtableanalyser method)": [[0, "RandomBooleanCircuits.source.pycharcAnalysis.TruthTableAnalyser.max_tt_dist_btw_fp"]], "median_comp_in_fp() (randombooleancircuits.source.pycharcanalysis.truthtableanalyser method)": [[0, "RandomBooleanCircuits.source.pycharcAnalysis.TruthTableAnalyser.median_comp_in_fp"]], "min_comp_in_fp() (randombooleancircuits.source.pycharcanalysis.truthtableanalyser method)": [[0, "RandomBooleanCircuits.source.pycharcAnalysis.TruthTableAnalyser.min_comp_in_fp"]], "missing_fc_add() (randombooleancircuits.source.pycharcanalysis.truthtableanalyser method)": [[0, "RandomBooleanCircuits.source.pycharcAnalysis.TruthTableAnalyser.missing_fc_add"]], "mode_comp_in_fp() (randombooleancircuits.source.pycharcanalysis.truthtableanalyser method)": [[0, "RandomBooleanCircuits.source.pycharcAnalysis.TruthTableAnalyser.mode_comp_in_fp"]], "module": [[0, "module-RandomBooleanCircuits.source.pycharcAnalysis"], [2, "module-RandomBooleanCircuits.source.boolean_circuits"]], "truth_cc_boxplot() (randombooleancircuits.source.pycharcanalysis.truthtableanalyser method)": [[0, "RandomBooleanCircuits.source.pycharcAnalysis.TruthTableAnalyser.truth_cc_boxplot"]], "truth_to_list() (randombooleancircuits.source.pycharcanalysis.truthtableanalyser method)": [[0, "RandomBooleanCircuits.source.pycharcAnalysis.TruthTableAnalyser.truth_to_list"]], "tt_by_circuit() (randombooleancircuits.source.pycharcanalysis.truthtableanalyser method)": [[0, "RandomBooleanCircuits.source.pycharcAnalysis.TruthTableAnalyser.tt_by_circuit"]], "tt_distance_graph() (randombooleancircuits.source.pycharcanalysis.truthtableanalyser method)": [[0, "RandomBooleanCircuits.source.pycharcAnalysis.TruthTableAnalyser.tt_distance_graph"]], "unique_tt() (randombooleancircuits.source.pycharcanalysis.truthtableanalyser static method)": [[0, "RandomBooleanCircuits.source.pycharcAnalysis.TruthTableAnalyser.unique_tt"]], "variants_by_fc() (randombooleancircuits.source.pycharcanalysis.truthtableanalyser method)": [[0, "RandomBooleanCircuits.source.pycharcAnalysis.TruthTableAnalyser.variants_by_fc"]], "circuit (class in randombooleancircuits.source.circuit)": [[1, "RandomBooleanCircuits.source.Circuit.Circuit"]], "circuitexplorer (class in randombooleancircuits.source.circuitexplorer)": [[1, "RandomBooleanCircuits.source.CircuitExplorer.CircuitExplorer"]], "gen_binary_strings() (randombooleancircuits.source.circuitexplorer.circuitexplorer method)": [[1, "RandomBooleanCircuits.source.CircuitExplorer.CircuitExplorer.gen_binary_strings"]], "run() (randombooleancircuits.source.circuit.circuit method)": [[1, "RandomBooleanCircuits.source.Circuit.Circuit.run"]], "run() (randombooleancircuits.source.circuitexplorer.circuitexplorer method)": [[1, "RandomBooleanCircuits.source.CircuitExplorer.CircuitExplorer.run"]], "run_single() (randombooleancircuits.source.circuitexplorer.circuitexplorer method)": [[1, "RandomBooleanCircuits.source.CircuitExplorer.CircuitExplorer.run_single"]], "set_parameters() (randombooleancircuits.source.circuitexplorer.circuitexplorer method)": [[1, "RandomBooleanCircuits.source.CircuitExplorer.CircuitExplorer.set_parameters"]], "rbcsystem (class in randombooleancircuits.source.boolean_circuits)": [[2, "RandomBooleanCircuits.source.boolean_circuits.RBCSystem"]], "randombooleancircuits.source.boolean_circuits": [[2, "module-RandomBooleanCircuits.source.boolean_circuits"]], "add_search_results() (in module randombooleancircuits.source.boolean_circuits)": [[2, "RandomBooleanCircuits.source.boolean_circuits.add_search_results"]], "circuit_search() (in module randombooleancircuits.source.boolean_circuits)": [[2, "RandomBooleanCircuits.source.boolean_circuits.circuit_search"]], "make_subclass() (in module randombooleancircuits.source.boolean_circuits)": [[2, "RandomBooleanCircuits.source.boolean_circuits.make_subclass"]], "preprocess() (randombooleancircuits.source.boolean_circuits.rbcsystem method)": [[2, "RandomBooleanCircuits.source.boolean_circuits.RBCSystem.preprocess"]], "run() (randombooleancircuits.source.boolean_circuits.rbcsystem method)": [[2, "RandomBooleanCircuits.source.boolean_circuits.RBCSystem.run"]], "run_one() (randombooleancircuits.source.boolean_circuits.rbcsystem method)": [[2, "RandomBooleanCircuits.source.boolean_circuits.RBCSystem.run_one"]], "save_results() (in module randombooleancircuits.source.boolean_circuits)": [[2, "RandomBooleanCircuits.source.boolean_circuits.save_results"]], "train() (randombooleancircuits.source.boolean_circuits.rbcsystem method)": [[2, "RandomBooleanCircuits.source.boolean_circuits.RBCSystem.train"]]}})